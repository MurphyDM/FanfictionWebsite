const User = require('./script/database');

User.create({
    name: "James",
    email: 'din@m.ru',
    password: '12345tom',
    sign_up_date: '1/1/1',
    last_sign_in_date: '1/1/1',
    status: 'active',
    salt: 'salt',
    hash: 'hash'
  }).then(res=>{
    const user = {id: res.id, name: res.name}
    console.log(user);
  }).catch(err=>console.log(err));
  
  User.findAll({raw:true}).then(users=>{
    console.log(users);
  }).catch(err=>console.log(err));

  User.findAll({where:{name: "Din"}, raw: true })
  .then(users=>{
    console.log(users);
  }).catch(err=>console.log(err));

  User.findOne({where: {name: "Tom"}})
  .then(user=>{
    if(!user) return;
    console.log(user.name, user.age);
  }).catch(err=>console.log(err));

  User.update({ email: 'newlira99@gmail.com' }, {
    where: {
      name: "Lira"
    }
  }).then((res) => {
    console.log(res);
  });

  User.destroy({
    where: {
      name: "Bob"
    }
  }).then((res) => {
    console.log(res);
  });

......

  const useAuth = () => {
    const [isLogged, setIsLogged] = useState(tokenProvider.isLoggedIn());

    useEffect(() => {
        const listener = (newIsLogged: boolean) => {
            setIsLogged(newIsLogged);
        };

        tokenProvider.subscribe(listener);
        return () => {
            tokenProvider.unsubscribe(listener);
        };
    }, []);

    return [isLogged] as [typeof isLogged];
};